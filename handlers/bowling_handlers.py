# handlers/bowling_handlers.py

import asyncio
import uuid

from aiogram import Bot, F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from database import db
from handlers.utils import safe_edit_caption, safe_send_message
from keyboards.factories import BowlingCallback, GameCallback
from keyboards.inline import bowling_play_again_keyboard
from lexicon.texts import LEXICON

router = Router()

# –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤—ã–∏–≥—Ä—ã—à
BOWLING_COST = 10
BOWLING_WIN_AMOUNT = 12


@router.callback_query(GameCallback.filter((F.name == "bowling") & (F.action == "start")))
async def bowling_menu_handler(callback: CallbackQuery, bot: Bot):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã '–ë–æ—É–ª–∏–Ω–≥'."""
    if not callback.message:
        return

    balance = await db.get_user_balance(callback.from_user.id)
    text = LEXICON["bowling_menu"].format(
        balance=balance, cost=BOWLING_COST, prize=BOWLING_WIN_AMOUNT
    )

    # –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π "–ò–≥—Ä–∞—Ç—å"
    await safe_edit_caption(
        bot,
        caption=text,
        chat_id=callback.message.chat.id,
        message_id=callback.message.message_id,
        reply_markup=bowling_play_again_keyboard(), # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )
    await callback.answer()


@router.callback_query(BowlingCallback.filter(F.action == "throw"))
async def throw_bowling_handler(callback: CallbackQuery, bot: Bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±—Ä–æ—Å–æ–∫ —à–∞—Ä–∞."""
    user_id = callback.from_user.id
    balance = await db.get_user_balance(user_id)

    if balance < BOWLING_COST:
        await callback.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã.", show_alert=True)
        return

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å—Ç–∞—Ä—ã–π –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –Ω–µ "–∑–∞–≤–∏—Å–∞–ª–∞"
    await callback.answer()

    # –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏ –∑–∞ –ø–æ–ø—ã—Ç–∫—É
    idem_key = f"bowling-spend-{user_id}-{uuid.uuid4()}"
    spent = await db.spend_balance(
        user_id, BOWLING_COST, "bowling_throw_cost", idem_key=idem_key
    )
    if not spent:
        # –ï—Å–ª–∏ —Å–ø–∏—Å–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await safe_send_message(user_id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∏—Å–∞—Ç—å —Å—Ç–∞–≤–∫—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –±–æ—É–ª–∏–Ω–≥–∞
    msg: Message = await bot.send_dice(chat_id=user_id, emoji="üé≥")

    # –ó–Ω–∞—á–µ–Ω–∏–µ 6 –æ–∑–Ω–∞—á–∞–µ—Ç —Å—Ç—Ä–∞–π–∫ (–≤—Å–µ –∫–µ–≥–ª–∏ —Å–±–∏—Ç—ã)
    is_win = msg.dice and msg.dice.value == 6

    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    await asyncio.sleep(4)

    if is_win:
        # –ù–∞—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à
        await db.add_balance_unrestricted(user_id, BOWLING_WIN_AMOUNT, "bowling_win")
        new_balance = await db.get_user_balance(user_id)
        result_text = LEXICON["bowling_win"].format(
            prize=BOWLING_WIN_AMOUNT, new_balance=new_balance
        )
    else:
        # –ü—Ä–æ–∏–≥—Ä—ã—à
        new_balance = await db.get_user_balance(user_id)
        result_text = LEXICON["bowling_lose"].format(
            cost=BOWLING_COST, new_balance=new_balance
        )

    # *** –ì–õ–ê–í–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: ***
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π "–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
    await bot.send_message(
        user_id, result_text, reply_markup=bowling_play_again_keyboard()
    )