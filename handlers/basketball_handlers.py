# handlers/basketball_handlers.py

import asyncio
import uuid

from aiogram import Bot, F, Router
from aiogram.types import CallbackQuery, Message

from database import db
from handlers.utils import safe_edit_caption, safe_send_message
from keyboards.factories import BasketballCallback, GameCallback
from keyboards.inline import basketball_play_again_keyboard
from lexicon.texts import LEXICON

router = Router()

# –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ –≤—ã–∏–≥—Ä—ã—à
BASKETBALL_COST = 10
BASKETBALL_WIN_AMOUNT = 12


@router.callback_query(
    GameCallback.filter((F.name == "basketball") & (F.action == "start"))
)
async def basketball_menu_handler(callback: CallbackQuery, bot: Bot):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–≥—Ä—ã '–ë–∞—Å–∫–µ—Ç–±–æ–ª'."""
    if not callback.message:
        return

    balance = await db.get_user_balance(callback.from_user.id)
    text = LEXICON["basketball_menu"].format(
        balance=balance, cost=BASKETBALL_COST, prize=BASKETBALL_WIN_AMOUNT
    )

    # –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π "–ò–≥—Ä–∞—Ç—å"
    await safe_edit_caption(
        bot,
        caption=text,
        chat_id=callback.message.chat.id,
        message_id=callback.message.message_id,
        reply_markup=basketball_play_again_keyboard(),
    )
    await callback.answer()


@router.callback_query(BasketballCallback.filter(F.action == "throw"))
async def throw_basketball_handler(callback: CallbackQuery, bot: Bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±—Ä–æ—Å–æ–∫ –º—è—á–∞."""
    user_id = callback.from_user.id
    balance = await db.get_user_balance(user_id)

    if balance < BASKETBALL_COST:
        await callback.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã.", show_alert=True)
        return

    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ —Å—Ç–∞—Ä—ã–π –∫–æ–ª–±—ç–∫, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ –Ω–µ "–∑–∞–≤–∏—Å–∞–ª–∞"
    await callback.answer()

    # –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏ –∑–∞ –ø–æ–ø—ã—Ç–∫—É
    idem_key = f"basketball-spend-{user_id}-{uuid.uuid4()}"
    spent = await db.spend_balance(
        user_id, BASKETBALL_COST, "basketball_throw_cost", idem_key=idem_key
    )
    if not spent:
        await safe_send_message(
            bot, user_id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∏—Å–∞—Ç—å —Å—Ç–∞–≤–∫—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        )
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –±–∞—Å–∫–µ—Ç–±–æ–ª–∞
    msg: Message = await bot.send_dice(chat_id=user_id, emoji="üèÄ")

    # –ó–Ω–∞—á–µ–Ω–∏—è 4 –∏ 5 –æ–∑–Ω–∞—á–∞—é—Ç –ø–æ–ø–∞–¥–∞–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É
    winning_values = {4, 5}
    is_win = msg.dice and msg.dice.value in winning_values

    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    await asyncio.sleep(4)

    if is_win:
        # –ù–∞—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à
        await db.add_balance_unrestricted(
            user_id, BASKETBALL_WIN_AMOUNT, "basketball_win"
        )
        new_balance = await db.get_user_balance(user_id)
        result_text = LEXICON["basketball_win"].format(
            prize=BASKETBALL_WIN_AMOUNT, new_balance=new_balance
        )
    else:
        # –ü—Ä–æ–∏–≥—Ä—ã—à
        new_balance = await db.get_user_balance(user_id)
        result_text = LEXICON["basketball_lose"].format(
            cost=BASKETBALL_COST, new_balance=new_balance
        )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π "–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
    await bot.send_message(
        user_id, result_text, reply_markup=basketball_play_again_keyboard()
    )
