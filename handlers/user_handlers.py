import logging
from typing import Dict  # <--- –î–û–ë–ê–í–ò–õ –≠–¢–û–¢ –ò–ú–ü–û–†–¢

from aiogram import F, Router
from aiogram.filters import Command, CommandStart
from aiogram.types import Message

from database.db import get_referrals_count  # –î–æ–±–∞–≤–ª–µ–Ω–æ
from database.db import (
    add_user,
    get_daily_bonus,
    get_top_users_by_balance,
    get_user_gifts,
    get_user_info,
)
from gifts import GIFTS_CATALOG
from keyboards.inline import main_menu_keyboard

# –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–µ—Å—å —Å–ª–æ–≤–∞—Ä—å LEXICON
from lexicon.texts import LEXICON

logger = logging.getLogger(__name__)

router = Router()

# –¢–µ–∫—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –±—ã–ª–æ –≤ –ª–µ–∫—Å–∏–∫–æ–Ω–µ
HELP_TEXT = (
    "<b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É Maniac Stars</b>\n\n"
    "–≠—Ç–æ –±–æ—Ç, –≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–≤–µ–∑–¥—ã ‚≠ê, –∏–≥—Ä–∞—è –≤ –∏–≥—Ä—ã –∏ –ø—Ä–∏–≥–ª–∞—à–∞—è –¥—Ä—É–∑–µ–π.\n\n"
    "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
    "/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
    "/menu - –û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
    "/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n"
    "/top - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤\n"
    "/mygifts - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à–∏ –ø–æ–¥–∞—Ä–∫–∏\n"
    "/bonus - –ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å"
)
MY_GIFTS_TEXT = "<b>üéÅ –í–∞—à–∏ –ø–æ–¥–∞—Ä–∫–∏</b>\n\n{gifts_list}"
TOP_USERS_TEXT = "üèÜ <b>–¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –±–∞–ª–∞–Ω—Å—É</b> üèÜ\n\n{top_list}"


# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(CommandStart())
async def process_start_command(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ–≥–æ —Ç–∞–º –Ω–µ—Ç,
    –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.
    """
    if not message.from_user:
        return
    user_id = message.from_user.id
    await add_user(user_id, message.from_user.username, message.from_user.full_name)
    await message.answer(
        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª—é—á –∏–∑ —Å–ª–æ–≤–∞—Ä—è
        LEXICON["start_message"].format(full_name=message.from_user.full_name),
        reply_markup=main_menu_keyboard(),
    )


# –ö–æ–º–∞–Ω–¥–∞ /help
@router.message(Command(commands=["help"]))
async def process_help_command(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ.
    """
    await message.answer(HELP_TEXT)


# –ö–æ–º–∞–Ω–¥–∞ /profile
@router.message(Command(commands=["profile"]))
async def process_profile_command(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile.
    –ü–æ–ª—É—á–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    if not message.from_user:
        return
    user_id = message.from_user.id
    profile_data = await get_user_info(user_id)
    if profile_data:
        referrals_count = await get_referrals_count(user_id)
        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ LEXICON
        await message.answer(
            LEXICON["profile"].format(
                full_name=profile_data.get("full_name", "N/A"),
                user_id=user_id,
                referrals_count=referrals_count,
                duel_wins=profile_data.get("duel_wins", 0),
                duel_losses=profile_data.get("duel_losses", 0),
                balance=profile_data.get("balance", 0),
                status_text="",  # –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Å—Ç—ã–º
            )
        )
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è.")


# –ö–æ–º–∞–Ω–¥–∞ /top
@router.message(Command(commands=["top"]))
async def process_top_users_command(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /top.
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –±–∞–ª–∞–Ω—Å—É.
    """
    top_users = await get_top_users_by_balance()
    if top_users:
        top_list = "\n".join(
            [
                f"{i + 1}. ID: {user_id} - –ë–∞–ª–∞–Ω—Å: {balance} ü™ô"
                for i, (user_id, balance) in enumerate(top_users)
            ]
        )
        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
        await message.answer(TOP_USERS_TEXT.format(top_list=top_list))
    else:
        await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–ø–∞.")


# **–ù–û–í–´–ô –•–ï–ù–î–õ–ï–† –î–õ–Ø –ü–†–û–°–ú–û–¢–†–ê –ü–û–î–ê–†–ö–û–í**
@router.message(Command(commands=["mygifts"]))
async def process_my_gifts_command(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mygifts.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –µ–≥–æ –ø–æ–¥–∞—Ä–∫–æ–≤.
    """
    if not message.from_user:
        return
    user_id = message.from_user.id
    gifts = await get_user_gifts(user_id)

    if not gifts:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤.")
        return

    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è —Ç–∏–ø–∞ –¥–ª—è —Å–ª–æ–≤–∞—Ä—è.
    gift_counts: Dict[str, int] = {}
    for gift_data in gifts:
        gift_id = gift_data["item_id"]
        gift_counts[gift_id] = gift_counts.get(gift_id, 0) + 1

    gift_lines = []
    for gift_id, count in gift_counts.items():
        gift_info = next((g for g in GIFTS_CATALOG if g["id"] == gift_id), None)
        if gift_info:
            gift_lines.append(f"{gift_info['emoji']} {gift_info['name']} x{count}")

    if gift_lines:
        await message.answer(MY_GIFTS_TEXT.format(gifts_list="\n".join(gift_lines)))
    else:
        await message.answer("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥–∞—Ä–∫–æ–≤.")


# –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å
@router.message(F.text == "üéâ –ë–æ–Ω—É—Å")
async def process_daily_bonus(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞.
    """
    if not message.from_user:
        return
    user_id = message.from_user.id
    result = await get_daily_bonus(user_id)
    status = result.get("status")
    bonus_amount = result.get("reward")
    message_text = ""
    if status == "success":
        message_text = f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ {bonus_amount} ‚≠ê!"
    elif status == "wait":
        seconds_left = result.get("seconds_left", 0)
        hours = int(seconds_left // 3600)
        minutes = int((seconds_left % 3600) // 60)
        message_text = f"–°–ª–µ–¥—É—é—â–∏–π –±–æ–Ω—É—Å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ {hours} —á. {minutes} –º–∏–Ω."
    else:
        message_text = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

    # –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä—è–º—É—é
    await message.answer(message_text)
