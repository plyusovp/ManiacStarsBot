# handlers/slots_handlers.py

import asyncio
import uuid
from typing import Tuple

from aiogram import Bot, F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message

from config import settings
from database import db
from handlers.utils import safe_delete, safe_edit_caption
from keyboards.factories import GameCallback, SlotsCallback
from keyboards.inline import slots_stake_keyboard
from lexicon.texts import LEXICON

router = Router()


def get_reels_from_dice(value: int) -> Tuple[int, int, int]:
    """
    –†–∞–∑–±–∏—Ä–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–∞–π—Å–∞ "üé∞" (–æ—Ç 1 –¥–æ 64) –Ω–∞ —Ç—Ä–∏ –±–∞—Ä–∞–±–∞–Ω–∞.
    –°–∏–º–≤–æ–ª—ã: 0: BAR, 1: Grapes, 2: Lemon, 3: Seven
    """
    val = value - 1
    reel1 = val % 4
    reel2 = (val // 4) % 4
    reel3 = (val // 16) % 4
    return reel1, reel2, reel3


@router.callback_query(GameCallback.filter((F.name == "slots") & (F.action == "start")))
async def slots_menu_handler(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–ª–æ—Ç–æ–≤ —Å –≤—ã–±–æ—Ä–æ–º —Å—Ç–∞–≤–∫–∏."""
    await state.clear()
    if not callback.message or not callback.from_user:
        return

    balance = await db.get_user_balance(callback.from_user.id)
    user_language = await db.get_user_language(callback.from_user.id)
    text = LEXICON["slots_menu"].format(balance=balance)

    await safe_edit_caption(
        bot,
        caption=text,
        chat_id=callback.message.chat.id,
        message_id=callback.message.message_id,
        reply_markup=slots_stake_keyboard(user_language),
        photo=settings.PHOTO_SLOTS,
    )
    await callback.answer()


@router.callback_query(GameCallback.filter((F.name == "slots") & (F.action == "rules")))
async def slots_rules_handler(callback: CallbackQuery, bot: Bot):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã '–°–ª–æ—Ç—ã'."""
    if not callback.message:
        return

    user_language = await db.get_user_language(callback.from_user.id)
    text = LEXICON["slots_rules"]

    await safe_edit_caption(
        bot,
        caption=text,
        chat_id=callback.message.chat.id,
        message_id=callback.message.message_id,
        reply_markup=slots_stake_keyboard(user_language),
        photo=settings.PHOTO_SLOTS,
    )
    await callback.answer("üìñ –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã")


async def spin_slots_until_result(
    bot: Bot, user_id: int, stake: int, user_language: str
) -> None:
    """
    –ö—Ä—É—Ç–∏—Ç —Å–ª–æ—Ç—ã –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–≤—ã–∏–≥—Ä—ã—à –∏–ª–∏ –ø—Ä–æ–∏–≥—Ä—ã—à).
    –ü—Ä–∏ –¥–≤—É—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–∞—Ö –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∫—Ä—É—Ç–∏—Ç—å.
    """
    symbol_seven = 3
    total_win_amount = 0

    while True:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–π—Å
        msg: Message = await bot.send_dice(chat_id=user_id, emoji="üé∞")
        await asyncio.sleep(2)

        dice_value = msg.dice.value if msg.dice else 0
        reel1, reel2, reel3 = get_reels_from_dice(dice_value)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if reel1 == reel2 == reel3:
            # –¢—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö - —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if reel1 == symbol_seven:
                # –¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏
                win_amount = stake * 7
                result_text_key = "slots_win"
            else:
                # –¢—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö (–Ω–µ —Å–µ–º–µ—Ä–∫–∏)
                win_amount = stake * 2
                result_text_key = "slots_win"

            total_win_amount += win_amount
            break

        elif reel1 == reel2 or reel2 == reel3:
            # –î–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∫—Ä—É—Ç–∏—Ç—å
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –∫—Ä—É—Ç–∏–º –µ—â—ë —Ä–∞–∑
            await bot.send_message(
                user_id, LEXICON["slots_two_match"], parse_mode="Markdown"
            )
            await asyncio.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –±—Ä–æ—Å–∫–æ–º
            continue

        else:
            # –í—Å–µ —Ä–∞–∑–Ω—ã–µ - –ø—Ä–æ–∏–≥—Ä—ã—à
            win_amount = 0
            result_text_key = "slots_lose"
            break

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    new_balance = await db.get_user_balance(user_id)

    if total_win_amount > 0:
        await db.add_balance_unrestricted(user_id, total_win_amount, "slots_win")
        new_balance += total_win_amount
        result_text = LEXICON[result_text_key].format(
            prize=total_win_amount, new_balance=new_balance
        )
    else:
        result_text = LEXICON["slots_lose"].format(cost=stake, new_balance=new_balance)

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–≥—Ä–∞–ª –≤ —Å–ª–æ—Ç—ã
    await db.record_game_play(user_id, "slots")

    menu_text = LEXICON["slots_menu"].format(balance=new_balance)
    final_text = f"{result_text}\n\n{menu_text}"

    await bot.send_photo(
        user_id,
        settings.PHOTO_SLOTS,
        caption=final_text,
        reply_markup=slots_stake_keyboard(user_language),
    )


@router.callback_query(SlotsCallback.filter(F.action == "spin"))
async def spin_slots_handler(
    callback: CallbackQuery, callback_data: SlotsCallback, bot: Bot
):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ä–∞—â–µ–Ω–∏–µ –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏."""
    if not callback.from_user or not callback.message:
        return

    stake_from_callback = callback_data.value
    if stake_from_callback is None:
        await callback.answer("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç–∞–≤–∫–∞.", show_alert=True)
        return

    stake = int(stake_from_callback)
    user_id = callback.from_user.id
    balance = await db.get_user_balance(user_id)
    user_language = await db.get_user_language(user_id)

    if balance < stake:
        await callback.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã.", show_alert=True)
        return

    await callback.answer()
    await safe_delete(bot, callback.message.chat.id, callback.message.message_id)

    idem_key = f"slots-spend-{user_id}-{uuid.uuid4()}"
    spent = await db.spend_balance(user_id, stake, "slots_spin_cost", idem_key=idem_key)
    if not spent:
        new_balance = await db.get_user_balance(user_id)
        error_text = "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∏—Å–∞—Ç—å —Å—Ç–∞–≤–∫—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        menu_text = LEXICON["slots_menu"].format(balance=new_balance)
        await bot.send_photo(
            user_id,
            settings.PHOTO_SLOTS,
            caption=f"{error_text}\n\n{menu_text}",
            reply_markup=slots_stake_keyboard(user_language),
        )
        return

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –≤—Ä–∞—â–µ–Ω–∏—è –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    await spin_slots_until_result(bot, user_id, stake, user_language)
